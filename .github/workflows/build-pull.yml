name: Build - Pull Request

on: [pull_request]

jobs:
  build:
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: Install dependencies (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-musl
          rustup target add x86_64-unknown-linux-musl

      - name: Build x86_64 (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Build aarch64 (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: cargo build --release --target aarch64-unknown-linux-musl

      - name: Build for ARM (macOS)
        if: matrix.platform == 'macos-latest'
        run: cargo build --release --target x86_64-apple-darwin

      - name: Build for Intel (macOS)
        if: matrix.platform == 'macos-latest'
        run: cargo build --release --target aarch64-apple-darwin
